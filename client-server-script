#!/usr/bin/env bash
# -*- mode: perl; indent-tabs-mode: t; perl-indent-level: 4 -*-
# vim: autoindent tabstop=4 shiftwidth=4 expandtab softtabstop=4 filetype=bash


longopts="rickshaw-host:,run-dir:,cs-id:,cmd-dir:,roadblock-server:,roadblock-passwd:,roadblock-id:"
opts=$(getopt -q -o "" --longoptions "$longopts" -n "getopt.sh" -- "$@");
if [ $? -ne 0 ]; then
    printf -- "\tUnrecognized option specified\n\n"
    usage
    exit 1
fi
eval set -- "$opts";
while true; do
    case "$1" in
        --rickshaw-host)
            shift;
            rickshaw_host="$1"
            shift;
            ;;
        --run-dir)
            shift;
            run_dir=$1
            shift;
            ;;
        --cs-id)
            shift;
            cs_id="$1"
            shift;
            ;;
        --cmd-dir)
            shift;
            cmd_dir="$1"
            shift;
            ;;
        --roadblock-server)
            shift;
            roadblock_server="$1"
            shift;
            ;;
        --roadblock-passwd)
            shift;
            roadblock_passwd="$1"
            shift;
            ;;
        --roadblock-id)
            shift;
            roadblock_id="$1"
            shift;
            ;;
        --)
            shift;
            break;
           ;;
        *)
           exit_error "Unexpected argument [$1]"
           shift;
           break;
           ;;
    esac
done

exec &> >(tee -a "$cs_id-log.txt")

if [ -z "$rickshaw_host" ]; then
	echo "Exiting due to rickshaw host not being set"
	exit 1
fi

use_roadblock=1
if [ -z "$roadblock_server" ]; then
    echo "Cannot use roadblock for synchronizaton because a server was not provided"
    use_roadblock=0
fi
if [ -z "$roadblock_id" ]; then
    echo "Cannot use roadblock for synchronizaton because an ID was not provided"
    use_roadblock=0
fi
if [ -z "$roadblock_passwd" ]; then
    echo "Cannot use roadblock for synchronizaton because a password was not provided"
    use_roadblock=0
fi

function do_roadblock() {
    label=$1
    timeout=$2
    extra=$3
    if [ "$use_roadblock" == "1" ]; then
        roadblock --role=follower --redis-server=$roadblock_server --timeout=$timeout --redis-password=$roadblock_passwd \
                     --uuid=$roadblock_id:$label --follower-id=$cs_id $extra
        return $?
    fi
    return 0
}

do_roadblock client-server-script-start 300 || exit
do_roadblock client-server-start-tools 300 || exit
echo -e "\nStarting tools"

testloop_abort_opt=" --abort 1"
while read line; do
    iter_samp=`echo $line | awk '{print $1}'`
    cmd=`echo $line | sed -e s/^$iter_samp//`
    iter=`echo $iter_samp | awk -F- '{print $1}'`
    samp=`echo $iter_samp | awk -F- '{print $2}'`
    mkdir -p iteration-$iter/sample-$samp
    find . -mindepth 1 -maxdepth 1 -type f | grep -v -- "$cs_id-log.txt" | cpio -pdum iteration-$iter/sample-$samp/
    pushd iteration-$iter/sample-$samp
    do_roadblock client-server-start-test:$iter-$samp 300 || break
    echo -e "\nRunning iteration $iter, sample $samp"
    echo -e "Benchmark command: $cmd"
    $cmd
    if [ $? -gt 0 ]; then
        echo -e "\nNon-zero exit code from iteration $iter, sample $samp"
        do_roadblock client-server-stop-test:$iter-$samp 300 " --abort=1"
        break
    else
        do_roadblock client-server-stop-test:$iter-$samp 300 || break
    fi
    popd
done < "$cmd_dir/$cs_id"

do_roadblock client-server-stop-tools 300 || exit
echo -e "\nStopping tools"
# stop-tools command here
do_roadblock client-server-send-data 300 || exit
echo -e "\nClients/servers copying data back to endpoint"
if [ -e $cs_id-data.tgz ]; then
    /bin/rm -f $cs_id-data.tgz
fi
tar czf - . | ssh $rickshaw_host "dd of=$run_dir/$cs_id-data.tgz"
#scp $cs_id-data.tgz $rickshaw_host:$run_dir
do_roadblock client-server-script-finish 300 || exit
echo -e "\nAll client/server scripts are finished"
# /bin/rm -rf iteration-*
