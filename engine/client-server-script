#!/usr/local/bin/bash
# -*- mode: sh; indent-tabs-mode: nil; sh-basic-offset: 4 -*-
# vim: autoindent tabstop=4 shiftwidth=4 expandtab softtabstop=4 filetype=bash
exec 2>&1

echo "BASH_VERSION=${BASH_VERSION}"

test -e /etc/profile && . /etc/profile

if [ ! -e /usr/local/bin/client-server-script-library ]; then
    echo "ERROR: Could not location client-server-script-library"
else
    source client-server-script-library
fi

# Depending on how client-server-script is started, "/usr/local/bin" is not
# always in the $PATH
PATH="/usr/local/bin:$PATH"

echo "client-server-script env:"
env
echo "client-server-script params:"
echo "$@"
echo
echo os-release:
cat /etc/os-release
echo
echo "uname:"
uname -a
echo
version=20200509
echo "version: $version"
echo

sync=client-server-script-start
leader=controller
load_json_setting "roadblock.timeouts.default" default_timeout
process_opts
validate_core_env
setup_core_env # roadblocks may be used after this
if [ $abort -eq 0 ]; then do_roadblock $sync $leader $client_server_script_start_timeout; fi
if [ $abort -eq 0 -a $? -eq 0 ]; then
    sync=$sync_prefix-get-data
    pushd "$cs_dir" >/dev/null || abort_error "Could not chdir to $cs_dir" $sync $leader
    if [ $abort -eq 0 ]; then do_roadblock $sync $leader $default_timeout; fi
    if [ $abort -eq 0 -a $? -eq 0 ]; then # get-data rb passed
        get_data
        sync=$sync_prefix-collect-sysinfo
        if [ $abort -eq 0 ]; then do_roadblock $sync $leader $default_timeout; fi
        if [ $? -eq 0 -a $abort -eq 0 ]; then # collect-sysinfo rb passed
            collect_sysinfo
            sync=$sync_prefix-start-tools
            if [ $abort -eq 0 ]; then do_roadblock $sync $leader $default_timeout; fi
            if [ $? -eq 0 -a $abort -eq 0 ]; then # start-tools rb passed
                sync=$sync_prefix-start-tests

                #if [ "$cs_label" == "worker-1" ]; then
                    #abort_error "Fault injection from client-1 before $sync" $sync $leader
                #fi
                #echo "finished with fault injection"

                start_tools
                if [ $abort -eq 0 ]; then do_roadblock $sync $leader $default_timeout; fi
                if [ $abort -eq 0 -a $? -eq 0 ]; then # start-tests rb passed
                    run_tests
                fi
                do_roadblock $sync_prefix-stop-tests $leader $default_timeout
                do_roadblock $sync_prefix-stop-tools $leader $default_timeout
                stop_tools
            fi
        fi
        do_roadblock $sync_prefix-send-data $leader $default_timeout
        send_data
    fi
    echo "right before script-stop roadblock"
    do_roadblock $sync_prefix-script-stop $leader $default_timeout
    popd >/dev/null
fi
echo -e "\nAll client/server scripts are finished"
/bin/rm -rf $cs_dir
